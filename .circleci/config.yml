version: 2.1

orbs:
  node: circleci/node@4.1.0

parameters:
  package-version:
    type: string
    default: "1.2.0"

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: geocollections/geocase-ui
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  checkout_code:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocase/geocase-ui
    steps:
      - checkout
      - save_cache:
          key: << pipeline.parameters.package-version >>-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/geocase/geocase-ui

  bundle_dependencies:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocase/geocase-ui
    steps:
      - restore_cache:
          key: << pipeline.parameters.package-version >>-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: << pipeline.parameters.package-version >>-bundle-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Npm disabling progress bar and adding depth 0
          command: npm set progress=false && npm config set depth 0
      - run:
          name: Installing packages
          command: npm install
      - save_cache:
          key: << pipeline.parameters.package-version >>-bundle-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ./node_modules
            - ./package-lock.json

  unit_test_application:
    docker:
      - image: circleci/node:lts
    working_directory: ~/geocase/geocase-ui
    steps:
      - restore_cache:
          key: << pipeline.parameters.package-version >>-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: << pipeline.parameters.package-version >>-bundle-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Unit testing application
          command: npm run test:unit
      - save_cache:
          key: << pipeline.parameters.package-version >>-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/geocase/geocase-ui

  build_docker_image:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:<< pipeline.parameters.package-version >> -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish_docker_image:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archive Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker image to Docker Hub
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push $IMAGE_NAME

  run_docker_image:
    executor: docker-publisher
    steps:
      - run:
          name: Run Docker image
          command: ssh -o "StrictHostKeyChecking no" -p ${PORT} ${USER}@${ADDRESS} "cd /var/www/geocase-ui/script && . run_docker_image.sh"

workflows:
  build-master:
    jobs:
      - checkout_code:
          filters:
            branches:
              only: development
      - bundle_dependencies:
          requires:
            - checkout_code
          filters:
            branches:
              only: development
      - unit_test_application:
          requires:
            - bundle_dependencies
          filters:
            branches:
              only: development
      - build_docker_image:
          filters:
            branches:
              only: master
      - publish_docker_image:
          requires:
            - build_docker_image
          filters:
            branches:
              only: master
      - run_docker_image:
          requires:
            - publish_docker_image
          filters:
            branches:
              only: master

